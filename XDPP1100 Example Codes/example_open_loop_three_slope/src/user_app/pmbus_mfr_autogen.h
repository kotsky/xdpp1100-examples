
/**
 * @file    ./src/user_app/pmbus_mfr_autogen.h
 * @brief   Automatically generated from output of pmbus compile script.
 */

/* ============================================================================
** Copyright (C) 2021 Infineon. All rights reserved.
**               Infineon Technologies, PMM SYS / DES
** ============================================================================
**
** ============================================================================
** This document contains proprietary information. Passing on and
** copying of this document, and communication of its contents is not
** permitted without prior written authorisation.
** ============================================================================
**
** Automatically generated by:  pmbus_xlsx2c.py shasta_pmbus.xlsx
** Created on:  2021-02-06
*/
/*lint -save -e960 */


#ifndef PMBUS_MFR_AUTOGEN_H
#define PMBUS_MFR_AUTOGEN_H

#include <stdint.h>              /* uint*_t */
#include "fw_bool.h"             /* boolean type */
#include "pmbus_autogen.h"




#define PMBUS_CMDCODE_MFR_SOFTSTART_IRQ_RATE_SEL (0xB1)

/* instantiate the command structure for MFR_SOFTSTART_IRQ_RATE_SEL.
 */
// instances of the struct one per command
extern PMBUS_CMD_t PMBUS_CMD_MFR_SOFTSTART_IRQ_RATE_SEL;
extern uint8_t	PMBUS_CMD_MFR_SOFTSTART_IRQ_RATE_SEL_DATA_LOOP0[1];  	// data array for command loop0
extern uint8_t	* PMBUS_CMD_MFR_SOFTSTART_IRQ_RATE_SEL_DATA_LOOP1;    // data array for command loop1 (pointer if common)
extern uint8_t	PMBUS_CMD_MFR_SOFTSTART_IRQ_RATE_SEL_RANGE[9];  	// data array for range (common for loops)

#define PMBUS_CMDCODE_MFR_SOFTSTART_PWM_STEPSIZE (0xB2)

/* instantiate the command structure for MFR_SOFTSTART_PWM_STEPSIZE.
 */
// instances of the struct one per command
extern PMBUS_CMD_t PMBUS_CMD_MFR_SOFTSTART_PWM_STEPSIZE;
extern uint8_t	PMBUS_CMD_MFR_SOFTSTART_PWM_STEPSIZE_DATA_LOOP0[4];  	// data array for command loop0
extern uint8_t	* PMBUS_CMD_MFR_SOFTSTART_PWM_STEPSIZE_DATA_LOOP1;    // data array for command loop1 (pointer if common)

#define PMBUS_CMDCODE_MFR_SOFTSTART_CYCLE_COUNT (0xB3)

/* instantiate the command structure for MFR_SOFTSTART_CYCLE_COUNT.
 */
// instances of the struct one per command
extern PMBUS_CMD_t PMBUS_CMD_MFR_SOFTSTART_CYCLE_COUNT;
extern uint8_t	PMBUS_CMD_MFR_SOFTSTART_CYCLE_COUNT_DATA_LOOP0[4];  	// data array for command loop0
extern uint8_t	* PMBUS_CMD_MFR_SOFTSTART_CYCLE_COUNT_DATA_LOOP1;    // data array for command loop1 (pointer if common)

#define PMBUS_CMDCODE_MFR_SOFTSTART_MAX_FREQUENCY (0xB4)

/* instantiate the command structure for MFR_SOFTSTART_MAX_FREQUENCY.
 */
// instances of the struct one per command
extern PMBUS_CMD_t PMBUS_CMD_MFR_SOFTSTART_MAX_FREQUENCY;
extern uint8_t	PMBUS_CMD_MFR_SOFTSTART_MAX_FREQUENCY_DATA_LOOP0[2];  	// data array for command loop0
extern uint8_t	* PMBUS_CMD_MFR_SOFTSTART_MAX_FREQUENCY_DATA_LOOP1;    // data array for command loop1 (pointer if common)


void pmbus_mfr_autogen_init(void);

// external handle functions
extern void PMBUS_HANDLE_MFR_SOFTSTART_IRQ_RATE_SEL(PMBUS_PAGE_t page, PMBUS_DIRECTION_e direction);
extern void PMBUS_HANDLE_MFR_SOFTSTART_PWM_STEPSIZE(PMBUS_PAGE_t page, PMBUS_DIRECTION_e direction);
extern void PMBUS_HANDLE_MFR_SOFTSTART_CYCLE_COUNT(PMBUS_PAGE_t page, PMBUS_DIRECTION_e direction);
extern void PMBUS_HANDLE_MFR_SOFTSTART_MAX_FREQUENCY(PMBUS_PAGE_t page, PMBUS_DIRECTION_e direction);

#endif   //#endif /* _PMBUS_MFR_AUTOGEN_H_ */


